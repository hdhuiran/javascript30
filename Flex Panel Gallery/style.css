html {
  /* 改变了盒子模型的计算方式。默认情况下设置的 width 和 height 只包含内容区域，不包括 padding 和 border。
  设置为 border-box 后，width 和 height 就包含了 padding 和 border，这使得布局计算更加直观和简单。 */
  /* flex-grow:
  控制项目如何放大以分配额外空间
  值为0时项目不放大
  大于0的值表示放大比例（如2表示占用的空间是1的两倍）

  flex-shrink:
  控制项目在空间不足时如何缩小
  值为0时项目不缩小
  大于0的值表示缩小比例

  flex-basis:
  设置项目在分配空间前的初始大小
  可以是具体长度值或auto

  flex简写:
  语法：flex: [grow] [shrink] [basis]
  常用值：flex: 0 1 auto（默认）, flex: 1, flex: auto, flex: none */
  box-sizing: border-box;
  background: #ffc600;
  font-family: "helvetica neue";
  font-size: 20px;
  font-weight: 200;
}
body {
  margin: 0;
}

/* 这是一个继承规则。* 是通配符选择器，代表“所有元素”。这行代码的意思是让页面上所有的元素，
以及它们的伪元素 :before 和 :after，都从它们的父元素那里继承 box-sizing 的设置 */
*,
*:before,
*:after {
  box-sizing: inherit;
}

.panels {
  /* 这是让画廊占满整个屏幕高度的关键。vh 是一个相对单位，100vh 代表“视口高度（viewport height）的100%”。
  这确保了 .panels 容器至少和浏览器窗口一样高。 */
  min-height: 100vh;

  /* 当子元素（面板）进行动画或者布局有些许超出时，这行代码会把超出的部分隐藏起来，避免出现滚动条 */
  overflow: hidden;
  display: flex;
}

.panel {
  background: #6b0f9c;
  box-shadow: inset 0 0 0 5px rgba(255, 255, 255, 0.1);
  color: white;
  text-align: center;
  align-items: center;
  /* cubic-bezier(...): 这是一个“缓动函数”，它定义了动画的速度曲线。这里给出的这个贝塞尔曲线值会创造一种很有趣的、带有回弹效果的动画。 */
  transition: 
    font-size 0.7s cubic-bezier(0.61, -0.19, 0.7, -0.11),
    flex 0.7s cubic-bezier(0.61, -0.19, 0.7, -0.11), 
    background 0.2s;
  font-size: 20px;
  background-size: cover;
  background-position: center;
  flex: 1;
  display: flex;
  justify-content: center;
  flex-direction: column;
}

.panel1 {
  background-image: url(https://source.unsplash.com/gYl-UtwNg_I/1500x1500);
}
.panel2 {
  background-image: url(https://source.unsplash.com/rFKUFzjPYiQ/1500x1500);
}
.panel3 {
  background-image: url(https://images.unsplash.com/photo-1465188162913-8fb5709d6d57?ixlib=rb-0.3.5&q=80&fm=jpg&crop=faces&cs=tinysrgb&w=1500&h=1500&fit=crop&s=967e8a713a4e395260793fc8c802901d);
}
.panel4 {
  background-image: url(https://source.unsplash.com/ITjiVXcwVng/1500x1500);
}
.panel5 {
  background-image: url(https://source.unsplash.com/3MNzGlQM7qs/1500x1500);
}

/* 这个选择器选中了 .panel 元素的所有直接子元素（也就是那三个 <p> 标签），给它们也加上了 transform 的过渡效果 */
.panel > * {
  margin: 0;
  width: 100%;
  transition: transform 0.5s;
  flex: 1 0 auto;
  display: flex;
  justify-content: center;
  align-items: center;
}

.panel p {
  text-transform: uppercase;
  font-family: "Amatic SC", cursive;
  text-shadow: 0 0 4px rgba(0, 0, 0, 0.72), 0 0 14px rgba(0, 0, 0, 0.45);
  font-size: 2em;
}
.panel p:nth-child(2) {
  font-size: 4em;
}

/* 初始状态：文字藏在外面 */
.panel > *:first-child {
  transform: translateY(-100%);
}
.panel > *:last-child {
  transform: translateY(100%);
}

/* 激活状态：文字滑进来 */
.panel.open-active > *:first-child {
  transform: translateY(0);
}
.panel.open-active > *:last-child {
  transform: translateY(0);
}

/* 当一个元素同时拥有 .panel 和 .open 这两个类名时”应用此样式 */
.panel.open {
  flex: 5;
  font-size: 40px;
}
